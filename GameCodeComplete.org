* chapeter 2, layers
** application layer
*** reading input & translate
*** file system & resource caching
*** managing memory
*** initialization, the main loop, & shutdown
*** trivals
**** system clock
**** string handlling
**** DLLs
**** threads & synchronization
**** network
**** initialization
**** main loop
**** shutdown
** game logic layer
*** state & data structure
*** physics & collision
*** events
*** process manager(component)
    dependency
*** command interpreter
** game view
*** game view for human player
**** graphics display
     your artists need to know what your engine can do.
     estabilish CPU budgets
**** audio
     sound effects, music, speech
**** user interface
**** process manager
**** options
*** game view for AI
** networked game architecture
*** remote game view
*** remote game logic
* chapter 3, architectural principle
** keep class hierarchies as flat as possible
** encapsulate system that are most likely to change
** use interface
** use factory
**
* chapter 4, build your game
** build your game every night
** automatic your build
** create a bullte-proof directory structure
** braches: trunk(master), sandbox, gold
* chapter 5, initialization & shutdown
**
